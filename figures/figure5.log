/Users/phytsn/Documents/Postdoc/Code/CodeForZeemanZPaper/python/analytic.py:332: RuntimeWarning: overflow encountered in exp
  return x / (1.0 + x**2)**2 * quantum_spin * (1.0 - x**2) / (1.0 + x**2) * np.exp(hamiltonian(1.0/temperature, x, 1))
/Users/phytsn/Documents/Postdoc/Code/CodeForZeemanZPaper/python/analytic.py:349: IntegrationWarning: The occurrence of roundoff error is detected, which prevents 
  the requested tolerance from being achieved.  The error may be 
  underestimated.
  total[i], _ = integrate.quad(lambda x: high_temperature_numerator_correction_integrand(quantum_spin, temperature, hamiltonian, x), 0, np.inf)
/Users/phytsn/Documents/Postdoc/Code/CodeForZeemanZPaper/python/analytic.py:349: IntegrationWarning: The maximum number of subdivisions (50) has been achieved.
  If increasing the limit yields no improvement it is advised to analyze 
  the integrand in order to determine the difficulties.  If the position of a 
  local difficulty can be determined (singularity, discontinuity) one will 
  probably gain from splitting up the interval and calling the integrator 
  on the subranges.  Perhaps a special-purpose integrator should be used.
  total[i], _ = integrate.quad(lambda x: high_temperature_numerator_correction_integrand(quantum_spin, temperature, hamiltonian, x), 0, np.inf)
/Users/phytsn/Documents/Postdoc/Code/CodeForZeemanZPaper/python/analytic.py:339: RuntimeWarning: overflow encountered in exp
  return x / (1.0 + x**2)**2 * np.exp(hamiltonian(1.0/temperature, x, 1))
/Users/phytsn/Documents/Postdoc/Code/CodeForZeemanZPaper/python/analytic.py:361: IntegrationWarning: The occurrence of roundoff error is detected, which prevents 
  the requested tolerance from being achieved.  The error may be 
  underestimated.
  total[i], _ = integrate.quad(lambda x: high_temperature_denominator_correction_integrand(temperature, hamiltonian,  x), 0, np.inf)
/Users/phytsn/Documents/Postdoc/Code/CodeForZeemanZPaper/python/analytic.py:361: IntegrationWarning: The maximum number of subdivisions (50) has been achieved.
  If increasing the limit yields no improvement it is advised to analyze 
  the integrand in order to determine the difficulties.  If the position of a 
  local difficulty can be determined (singularity, discontinuity) one will 
  probably gain from splitting up the interval and calling the integrator 
  on the subranges.  Perhaps a special-purpose integrator should be used.
  total[i], _ = integrate.quad(lambda x: high_temperature_denominator_correction_integrand(temperature, hamiltonian,  x), 0, np.inf)
excess data in 'kern' subtable: 6 bytes
fdsc NOT subset; don't know how to subset; dropped
feat NOT subset; don't know how to subset; dropped
meta NOT subset; don't know how to subset; dropped
morx NOT subset; don't know how to subset; dropped
'created' timestamp seems very low; regarding as unix timestamp
'modified' timestamp seems very low; regarding as unix timestamp
'created' timestamp seems very low; regarding as unix timestamp
'modified' timestamp seems very low; regarding as unix timestamp
'created' timestamp seems very low; regarding as unix timestamp
'modified' timestamp seems very low; regarding as unix timestamp
runtime: 1228.228 (s)
